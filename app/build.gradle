plugins {
    // Aplica el plugin de Spring Boot para trabajar con aplicaciones Spring
    id 'application'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.github.j4c62'
version = '0.0.4'
ext {
    springCloudVersion = '4.2.2'
}
repositories {
    // Usar Maven Central para resolver dependencias
    mavenCentral()

    // Repositorio privado de GitHub si estás usando librerías desde allí
    maven {
        url = uri("https://maven.pkg.github.com/j4c62/cloud-event-broadcaster")
        credentials {
            username = project.findProperty("github.username") ?: System.getenv("USERNAME")
            password = project.findProperty("github.token") ?: System.getenv("TOKEN")
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'com.github.j4c62:cloud-event-broadcaster:1.0.6'

    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2024.0.1'
    }
}
application {
    mainClass = 'com.github.j4c62.SpringBootCloudEventBroadcasterApp'
}

tasks.named('test') {
    // Usa JUnit Platform para ejecutar pruebas unitarias
    useJUnitPlatform()
}
